name: Generate Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'docs/**'
      - 'README.md'
  workflow_dispatch:

jobs:
  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pdoc3 pydoc-markdown
    
    - name: Generate API documentation
      run: |
        mkdir -p docs/api
        pdoc --html src/ -o docs/api
        echo "✓ API documentation generated"
    
    - name: Generate module documentation
      run: |
        # Document each module
        for file in src/*.py; do
          module=$(basename "$file" .py)
          echo "Documenting $module..."
          python -c "import src.$module; help(src.$module)" > docs/api/$module.txt || true
        done
      continue-on-error: true
    
    - name: Validate documentation links
      run: |
        # Check if documentation files exist
        ls -la docs/
        echo "✓ Documentation files validated"
    
    - name: Commit documentation changes
      if: always()
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add docs/ || true
        git commit -m "Auto-generated documentation" || true
        git push || true
      continue-on-error: true

  # Generate README metrics
  metrics:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate repository metrics
      run: |
        echo "# Repository Metrics" > METRICS.md
        echo "" >> METRICS.md
        echo "Last updated: $(date)" >> METRICS.md
        echo "" >> METRICS.md
        echo "## Code Statistics" >> METRICS.md
        echo "" >> METRICS.md
        
        total_lines=$(find src -name "*.py" -exec wc -l {} + | tail -1 | awk '{print $1}')
        total_files=$(find src -name "*.py" | wc -l)
        
        echo "- Total lines of code: $total_lines" >> METRICS.md
        echo "- Total Python files: $total_files" >> METRICS.md
        echo "- Average lines per file: $((total_lines / total_files))" >> METRICS.md
        echo "" >> METRICS.md
        
        cat METRICS.md
